#!/bin/env bash

# process flags
COPY=0
if [ "$#" -gt 0 ]; then
    while getopts 'ci' flag; do
        case "${flag}" in
            c) COPY=1;;
            *) echo "Unexpected option ${flag}"
            exit 1 ;;
        esac
    done

    # drop processed arguments
    shift $((OPTIND-1))
    INPUT=$@
else
    read -r INPUT
fi

# save emoji json in /tmp if not already there
if [ ! -f "/tmp/emoji.json" ]; then
    TOKEN=$(cat "$HOME/.config/emoji_api/token")
    curl -s "https://emoji-api.com/emojis?access_key=${TOKEN}" > /tmp/emoji.json
    # TODO: invalid token
fi

# get emojis and slugs
EMOJIS=$(cat "/tmp/emoji.json" | jq -r '.[] | "\(.character) \(.slug | sub("e[0-9]+-[0-9]+-"; ""))"')

# look for match on user input
MATCH=$(echo "$EMOJIS" | awk '{print $2}' | rg -x "$(echo $INPUT | tr ' ' '-')")

if [ -n "$MATCH" ]; then
    # if there's a match, return it
    CHOICE=$(echo "$EMOJIS" | rg $MATCH)
else
    # avoid using fzf when calling from inside vim
    if [ -n "$VIMRUNTIME" ]; then
        echo "$INPUT not found"
        exit 1
    else
        CHOICE=$(echo "$EMOJIS" | fzf --height=~10 --select-1 --exit-0 --query="$INPUT")
    fi
fi

# flagged behavior
if [ $COPY -gt 0 ]; then
    # copy to clipboard
    echo $CHOICE | awk '{printf "%s", $1}' | xclip -selection 'clipboard' -i
else
    # print to terminal
    echo $CHOICE | awk '{print $1}'
fi
