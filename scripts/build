#!/usr/bin/env bash

# set the hostname for this machine at this location
NIX_HOST_PATH=$HOME/.config/nixos/host

function new_host {
    # generate default.nix and hardware-configuration.nix for a new host
    echo "Generating hardware config..."
    read -rp "New host name ($(hostname)): " host

    if [[ -z $host ]]; then
        host=$(hostname)
    fi

    # copy and update template default.nix
    cp -r ./hosts/.temp ./hosts/"${host}"
    default=./hosts/${host}/default.nix
    to_replace=$(rg 'system.stateVersion' "$default")
    replacement_text=$(rg 'system.stateVersion' /etc/nixos/configuration.nix)
    sed -i "/$to_replace/c\\$replacement_text" "$default"

    # generate hardware configuration
    nixos-generate-config --show-hardware-config > hosts/"${host}"/hardware-configuration.nix
    git add .
    echo "$host" > "$NIX_HOST_PATH"
}

function choose_host {
    # if host path doesn't exist, choose one
    if [[ ! -e $NIX_HOST_PATH || ! -s $NIX_HOST_PATH ]]; then
        mkdir -p "$(dirname "$NIX_HOST_PATH")"
        choices=$(find ./hosts/* -maxdepth 1 -type d -exec basename {} \;)
        choice=$(echo "$choices" | sed 's/$/ new_host/' | sed 's/ /\n/g' | fzf --height 10%)
        if [[ $choice == "new_host" ]]; then
            new_host
        else
            echo "$choice" > "$NIX_HOST_PATH"
        fi
    fi
}

function rebuild {
  host=$(cat "$NIX_HOST_PATH")

  if [[ $1 == true ]]; then
    switch="dry-activate"
  else
    switch="switch"
  fi

  if sudo nixos-rebuild "$switch" --impure --flake .#"$host" 2>&1 | sudo tee nixos-switch.log > /dev/null; then
      echo "🔵 Build Succeeded"
      if [[ $1 == true ]]; then  # do not commit on dry runs
          echo "(dry run; no changes applied)"
      else
          git commit -am "$(nixos-rebuild list-generations | rg current)"
      fi
  else
      echo "🔴 Build Failed..."
      hash=$(rg --color=always 'hash mismatch' < nixos-switch.log)
      if [[ -n $hash ]]; then
          echo "$hash"
          rg --color=always 'specified:' < nixos-switch.log
          rg --color=always 'got:' < nixos-switch.log
      else
          rg --color=always error < nixos-switch.log
      fi
  fi
}

cd "$HOME/.dotfiles/nixos" || exit
echo "❄️ Rebuilding NixOS..."

shopt -s globstar
eval set -- "$(getopt -o d --long dry-run: -- "$@")"

dry_run=false
while true; do
    case "$1" in
        -d|--dry-run) dry_run=true; shift;;
        --) shift; break;;
        *) echo "Usage: $0 [-d|--dry-run]"; exit 1;;
    esac
done

git diff -U0 -- **/*.nix

choose_host
rebuild "$dry_run"
